apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nodejs-mongo-persistent.fullname" . }}
  labels:
    {{- include "nodejs-mongo-persistent.labels" . | nindent 4 }}
    {{- include "nodejs-mongo-persistent.labels.frontend" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "nodejs-mongo-persistent.selectorLabels" . | nindent 6 }}
      {{- include "nodejs-mongo-persistent.selectorLabels.frontend" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "nodejs-mongo-persistent.selectorLabels" . | nindent 8 }}
        {{- include "nodejs-mongo-persistent.selectorLabels.frontend" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "nodejs-mongo-persistent.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          env:
          - name: DATABASE_SERVICE_NAME
            value: {{ include "nodejs-mongo-persistent.fullname" . }}-mongo
          - name: MONGODB_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: {{ include "nodejs-mongo-persistent.fullname" . }}
          - name: MONGODB_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: {{ include "nodejs-mongo-persistent.fullname" . }}
          - name: MONGODB_DATABASE
            value: sampledb
          - name: MONGODB_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-admin-password
                name: {{ include "nodejs-mongo-persistent.fullname" . }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.nodejs.image.repository }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.nodejs.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
