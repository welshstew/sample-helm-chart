apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "tutorial-crud-api.fullname" . }}-mongo
  labels:
    {{- include "tutorial-crud-api.labels" . | nindent 4 }}
    {{- include "tutorial-crud-api.labels.backend" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "tutorial-crud-api.selectorLabels" . | nindent 6 }}      
      {{- include "tutorial-crud-api.selectorLabels.backend" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "tutorial-crud-api.selectorLabels" . | nindent 8 }}
        {{- include "tutorial-crud-api.selectorLabels.backend" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "tutorial-crud-api.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
      - name: mongodb-data 
        persistentVolumeClaim:
          claimName: {{ include "tutorial-crud-api.fullname" . }}
      containers:
        - name: mongodb
          env:
          - name: MONGODB_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: {{ include "tutorial-crud-api.fullname" . }}
          - name: MONGODB_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: {{ include "tutorial-crud-api.fullname" . }}
          - name: MONGODB_DATABASE
            value: sampledb
          - name: MONGODB_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-admin-password
                name: {{ include "tutorial-crud-api.fullname" . }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.mongo.image.repository }}"
          imagePullPolicy: {{ .Values.mongo.image.pullPolicy }}
          ports:
            - name: mongo
              containerPort: 27017
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 27017
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - mongo 127.0.0.1:27017/$MONGODB_DATABASE -u $MONGODB_USER -p $MONGODB_PASSWORD
                --eval="quit()"
            failureThreshold: 3
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            {{- toYaml .Values.mongo.resources | nindent 12 }}
          volumeMounts:
          - name: mongodb-data
            mountPath: /var/lib/mongodb/data
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
